version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}
    jenkins_data: {}
    traefik_data: {}
    portainer_data: {}

networks:
  front-tier:
  back-tier:

services:
  traefik:
    image: traefik:v1.5.0
    ports:
      - "80:80"
      - "8081:8081"
      - "443:443"
    networks:
      - front-tier
      - back-tier
    volumes:
      - ./conf/traefik:/etc/traefik
      - traefik_data:/storage
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    image: portainer/portainer:1.16.1
    labels:
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.packerbuilder.xyz"
    networks:
      - back-tier
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  jenkins:
    image: jenkinsci/jenkins:lts
    labels:
      - "traefik.port=8080"
      - "traefik.backend=jenkins"
      - "traefik.frontend.rule=Host:jenkins.packerbuilder.xyz"
    networks:
      - back-tier
    volumes:
      - jenkins_data:/var/jenkins_home

  prometheus:
    image: prom/prometheus:v2.0.0
    volumes:
      - ./conf/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    #deploy:
    #  placement:
    #    constraints:
    #      - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    #ports:
    #  - 9100:9100
    networks:
      - back-tier
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    #ports:
    #  - 9093:9093
    volumes:
      - ./conf/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    #deploy:
    #  placement:
    #    constraints:
    #      - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    #ports:
    #  - 8080:8080
    networks:
      - back-tier
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    labels:
      - "traefik.port=3000"
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=Host:grafana.packerbuilder.xyz"
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - config.monitoring
    networks:
      - back-tier

